---
- name: Configure Load Generator
  hosts: load_generator
  become: true

  vars:
    conflicting_packages:
      - docker.io
      - docker-doc
      - docker-compose
      - docker-compose-v2
      - podman-docker
      - containerd
      - runc

  tasks:
    - name: Remove conflicting packages
      apt:
        name: "{{ conflicting_packages }}"
        state: absent
        purge: yes
      ignore_errors: yes

    - name: Update package lists
      apt:
        update_cache: yes

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker's GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Check if /etc/os-release exists
      stat:
        path: /etc/os-release
      register: os_release_file

    - name: Fail if /etc/os-release does not exist
      fail:
        msg: "/etc/os-release is missing on this system."
      when: not os_release_file.stat.exists

    - name: Get Ubuntu version codename
      shell: |
        . /etc/os-release && echo "$VERSION_CODENAME"
      register: ubuntu_codename
      changed_when: false
      become: true

    - name: Get system architecture
      command: dpkg --print-architecture
      register: system_arch
      changed_when: false

    - name: Add Docker repository
      copy:
        content: "deb [arch={{ system_arch.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ubuntu_codename.stdout }} stable"
        dest: /etc/apt/sources.list.d/docker.list
        mode: '0644'

    - name: Update package lists (including Docker repository)
      apt:
        update_cache: yes

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Show Docker version
      debug:
        msg: "Docker successfully installed. Version: {{ docker_version.stdout }}"

    # Docker Compose deployment tasks
    - name: Copy docker-compose file
      copy:
        src: ../scripts/docker-compose.yml
        dest: /tmp/docker-compose.yml
        mode: '0644'

    - name: Get frontend IP address
      command: kubectl get service frontend-external -n {{ kubernetes_namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: frontend_ip
      delegate_to: localhost
      changed_when: false
      become: false

    - name: Run docker compose
      shell: |
        cd /tmp && \
        FRONTEND_ADDR_IP={{ frontend_ip.stdout }}:80 docker compose up -d
      args:
        executable: /bin/bash