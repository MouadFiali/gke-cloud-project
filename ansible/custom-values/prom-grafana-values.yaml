grafana:
  grafana.ini:
    server:
      root_url: "http://%(domain)s/infra/monitoring/grafana"
      serve_from_sub_path: true
  nameSpaceOverride: ""
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      searchNamespace: monitoring
      folderAnnotation: grafana-folder
      provider:
        allowUiUpdates: true
        disableDelete: false
        folder: ""
        type: file
        foldersFromFilesStructure: true  
  
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: 'istio-dashboards'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      istio-mesh-dashboard:
        gnetId: 7639
        datasource: prometheus
      istio-service-dashboard:
        gnetId: 7636
        datasource: prometheus
      istio-workload-dashboard:
        gnetId: 7630
        datasource: prometheus
      istio-performance-dashboard:
        gnetId: 11829
        datasource: prometheus
      istio-control-plane-dashboard:
        gnetId: 7645
        datasource: prometheus
      istio-wasm-extension-dashboard:
        gnetId: 13277
        datasource: prometheus
  additionalDataSources:
    - name: tempo
      access: proxy
      type: tempo
      url: http://tempo:3100
      editable: true
      orgId: 1
      version: 1
      jsonData:
        nodeGraph:
          enabled: true
        search:
          filters:
            - id: service-name
              operator: "="
              scope: resource
              tag: service.name
            - id: span-name
              operator: "="
              scope: span
              tag: name
        serviceMap:
          datasourceUid: prometheus
        tracesToMetrics:
          datasourceUid: prometheus
    - name: loki
      access: proxy
      type: loki
      url: http://loki-gateway
      editable: true
      orgId: 1
      version: 1
      jsonData:
        httpHeaderName1: "X-Scope-OrgID"
      secureJsonData:  
        httpHeaderValue1: "1"

prometheus:
  prometheusSpec:
    scrapeInterval: 15s
    scrapeTimeout: 10s
    evaluationInterval: 1m
    # Import the scrape configurations from Istio's Prometheus
    additionalScrapeConfigs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: kubernetes_namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: kubernetes_pod_name
      # Add the locust-metrics-exporter job to scrape metrics from the locust-metrics-exporter
      - job_name: prometheus_scrapper
        scrape_interval: 5s
        static_configs:
        - targets:
          - online-boutique-load-generator:9646
      # Redis exporter job
      - job_name: redis-exporter
        static_configs:
        - targets:
          - redis-cart.app:9121