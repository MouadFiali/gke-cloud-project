grafana:
  assertNoLeakedSecrets: false
  grafana.ini:
    server:
      root_url: "http://%(domain)s/infra/monitoring/grafana"
      serve_from_sub_path: true
    smtp:
      enabled: true
      host: host-value
      user: user-value
      password: password-value
      from_address: alerting@grafana.com
      from_name: Grafana
      skip_verify: true

  nameSpaceOverride: ""
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      searchNamespace: monitoring
      folderAnnotation: grafana-folder
      provider:
        allowUiUpdates: true
        disableDelete: false
        folder: ""
        type: file
        foldersFromFilesStructure: true  
  
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: 'istio-dashboards'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      istio-mesh-dashboard:
        gnetId: 7639
        datasource: prometheus
      istio-service-dashboard:
        gnetId: 7636
        datasource: prometheus
      istio-workload-dashboard:
        gnetId: 7630
        datasource: prometheus
      istio-performance-dashboard:
        gnetId: 11829
        datasource: prometheus
      istio-control-plane-dashboard:
        gnetId: 7645
        datasource: prometheus
      istio-wasm-extension-dashboard:
        gnetId: 13277
        datasource: prometheus
  additionalDataSources:
    - name: tempo
      access: proxy
      type: tempo
      url: http://tempo:3100
      editable: true
      orgId: 1
      version: 1
      jsonData:
        nodeGraph:
          enabled: true
        search:
          filters:
            - id: service-name
              operator: "="
              scope: resource
              tag: service.name
            - id: span-name
              operator: "="
              scope: span
              tag: name
        serviceMap:
          datasourceUid: prometheus
        tracesToMetrics:
          datasourceUid: prometheus
    - name: loki
      access: proxy
      type: loki
      url: http://loki-gateway
      editable: true
      orgId: 1
      version: 1
      jsonData:
        httpHeaderName1: "X-Scope-OrgID"
      secureJsonData:  
        httpHeaderValue1: "1"

prometheus:
  prometheusSpec:
    scrapeInterval: 15s
    scrapeTimeout: 10s
    evaluationInterval: 1m
    # Import the scrape configurations from Istio's Prometheus
    additionalScrapeConfigs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: kubernetes_namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: kubernetes_pod_name
      # Add the locust-metrics-exporter job to scrape metrics from the locust-metrics-exporter
      - job_name: prometheus_scrapper
        scrape_interval: 5s
        static_configs:
        - targets:
          - online-boutique-load-generator:9646
      # Redis exporter job
      - job_name: redis-exporter
        static_configs:
        - targets:
          - redis-cart.app:9121

additionalPrometheusRulesMap:
  locust-alerts:
    editable: true
    groups:
      - name: locust-alert-group
        rules:     
          - alert: LocustFailRatio
            expr: locust_requests_fail_ratio{instance="online-boutique-load-generator:9646"} <= 100
            for: 0s
            labels:
              severity: warning
            annotations:
              summary: "Locust alert: The fail ratio has exceeded 1% of the total requests."
              description: "Locust alert: The fail ratio has exceeded 1% of the total requests."
      - name: Canary-alert-group
        rules:
          - alert: canary_rollback
            expr: flagger_canary_status > 1
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: "Canary failed"
              description: "Workload {{ $labels.name }} namespace {{ $labels.namespace }}"

defaultRules:
  create: true
  rules:
    alertmanager: false
    etcd: false
    configReloaders: false
    general: false
    k8sContainerCpuUsageSecondsTotal: false
    k8sContainerMemoryCache: false
    k8sContainerMemoryRss: false
    k8sContainerMemorySwap: false
    k8sContainerResource: false
    k8sContainerMemoryWorkingSetBytes: false
    k8sPodOwner: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubelet: false
    kubeProxy: false
    kubePrometheusGeneral: false
    kubePrometheusNodeRecording: false
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    kubeStateMetrics: false
    network: false
    node: false
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: false
    prometheusOperator: false
    windows: false
      
alertmanager:
  config:
    global:
      resolve_timeout: 5m
      smtp_from: 'alerting@grafana.com'
      smtp_smarthost: host-value
      smtp_hello: 'localhost'
      smtp_auth_username: user-value
      smtp_auth_password: password-value
      smtp_auth_identity: user-value
      smtp_require_tls: true

    route:
      group_by: ['namespace']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'email-notifications'
      routes:
      - receiver: 'email-notifications'
        matchers:
        - alertname =~ ".*"
    receivers:
    - name: 'email-notifications'
      email_configs:
      - to: 'recipient@example.com'
        send_resolved: true

    