---
- name: Deploy Load Generator Container
  hosts: load_generator
  become: true

  tasks:
    - name: Copy docker-compose file
      copy:
        src: ../scripts/docker-compose.yml
        dest: /tmp/docker-compose.yml
        mode: '0644'

    - name: Get frontend IP address
      command: kubectl get service frontend-external -n {{ kubernetes_namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: frontend_ip
      delegate_to: localhost
      changed_when: false
      become: false

    - name: Run docker compose
      shell: |
        cd /tmp && \
        FRONTEND_ADDR_IP={{ frontend_ip.stdout }}:80 docker compose up -d
      args:
        executable: /bin/bash
    
    - name: Wait for Locust to become available
      uri:
        url: "http://localhost:8089/"
        method: GET
        status_code: 200
      register: result
      until: result.status == 200
      retries: 30
      delay: 5
      ignore_errors: yes

    - name: Get container logs if service failed to start
      shell: docker compose logs
      args:
        chdir: /tmp
      register: docker_logs
      when: result.status is not defined or result.status != 200
      ignore_errors: yes

    - name: Display docker logs if service failed
      debug:
        var: docker_logs.stdout_lines
      when: docker_logs is defined and docker_logs.stdout_lines is defined

    - name: Fail if service is not available
      fail:
        msg: "Locust service failed to become available after 150 seconds"
      when: result.status is not defined or result.status != 200

    - name: Swarm the load generator
      uri:
        url: "http://localhost:8089/swarm"
        method: POST
        headers:
          Content-Type: "application/x-www-form-urlencoded"
        body: "user_count=10&spawn_rate=1&host=http://{{ frontend_ip.stdout }}:80"
        status_code: 200
      register: swarm_result
      retries: 3
      delay: 5
      until: swarm_result is success