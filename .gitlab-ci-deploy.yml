stages:
  - parse-version
  - build
  - deploy

.variables_template: &variables_template
  variables:
    COMPONENT: ""
    COMPONENT_PATH: ""
    COMPONENT_IMAGE: ""

.parse_version_template: &parse_version_template
  stage: parse-version
  image: python:3.9
  script:
  - pip install ruamel.yaml
  - |
    python -c "
    from ruamel.yaml import YAML
    yaml = YAML()
    yaml.preserve_quotes = True  # Preserve quotes if present

    # Use GitLab CI variable for commit message
    commit_msg = '$(echo $CI_COMMIT_MESSAGE)'

    # Determine the version part to update
    version_part_to_update = 'patch'  # Default to patch version
    if '#major' in commit_msg:
        version_part_to_update = 'major'
    elif '#minor' in commit_msg:
        version_part_to_update = 'minor'

    # Load the YAML file
    with open('helm-chart/values.yaml', 'r') as f:
        data = yaml.load(f)
    
    component = '${COMPONENT}'
    old_tag = data[component]['image']['tag']
    
    # Extract the version parts
    version_parts = old_tag.strip('v').split('.')
    
    # Update the correct version part based on commit message
    if version_part_to_update == 'major':
        version_parts[0] = str(int(version_parts[0]) + 1)
        version_parts[1] = '0'  # Reset minor and patch versions
        version_parts[2] = '0'
    elif version_part_to_update == 'minor':
        version_parts[1] = str(int(version_parts[1]) + 1)
        version_parts[2] = '0'  # Reset patch version
    else:
        version_parts[2] = str(int(version_parts[2]) + 1)  # Default to increment patch

    new_tag = 'v' + '.'.join(version_parts)
    
    # Update the YAML file with the new tag
    data[component]['image']['tag'] = new_tag
    with open('values.yaml', 'w') as f:
        yaml.dump(data, f)
    
    print(f'Updated {component} tag: {old_tag} -> {new_tag}')
    "
  artifacts:
    paths:
      - values.yaml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - src/$COMPONENT_PATH/**/*


.build_template: &build_template
  stage: build
  image: docker:24.0.7-cli
  services:
    - docker:24.0.7-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    IMAGE_PREFIX: "registry.gitlab.com/${CI_PROJECT_PATH}"
  before_script:
    - apk add --no-cache python3 py3-pip
    - python3 -m venv /build/venv
    - source /build/venv/bin/activate
    - pip install pyyaml
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - VERSION=$(python -c "import yaml; print(yaml.safe_load(open('values.yaml'))['${COMPONENT}']['image']['tag'])")
    - echo "Building $COMPONENT_IMAGE:$VERSION"
    - IMAGE_PREFIX=$(echo $IMAGE_PREFIX | tr '[:upper:]' '[:lower:]')
    - docker build -t $IMAGE_PREFIX/$COMPONENT_IMAGE:$VERSION ./src/$COMPONENT_PATH
    - docker push $IMAGE_PREFIX/$COMPONENT_IMAGE:$VERSION
  artifacts:
    paths:
      - values.yaml
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - src/$COMPONENT_PATH/**/*

.deploy_template: &deploy_template
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache git
  script:
    - git config --global user.email "bot@example.com"
    - git config --global user.name "CI Bot"
    - git pull origin main
    - cp values.yaml helm-chart/values.yaml
    - git add helm-chart/values.yaml
    - git commit -m "CI#patch - Update ${COMPONENT} image version in values.yaml"
    - git push https://gitlab-ci-token:${GITLAB_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git HEAD:${CI_COMMIT_REF_NAME}
    - rm values.yaml # Clean up
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - src/$COMPONENT_PATH/**/*
    

# Component-specific jobs

# Ad Service
parse-version-adservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "adService"
    COMPONENT_IMAGE: "adservice"
    COMPONENT_PATH: "adservice"

build-adservice:
  extends: .build_template
  variables:
    COMPONENT: "adService"
    COMPONENT_IMAGE: "adservice"
    COMPONENT_PATH: "adservice"
  dependencies:
    - parse-version-adservice

deploy-adservice:
  extends: .deploy_template
  variables:
    COMPONENT: "adService"
    COMPONENT_IMAGE: "adservice"
    COMPONENT_PATH: "adservice"
  dependencies:
    - build-adservice

# Cart Service
parse-version-cartservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "cartService"
    COMPONENT_IMAGE: "cartservice"
    COMPONENT_PATH: "cartservice/src"

build-cartservice:
  extends: .build_template
  variables:
    COMPONENT: "cartService"
    COMPONENT_IMAGE: "cartservice"
    COMPONENT_PATH: "cartservice/src"
  dependencies:
    - parse-version-cartservice

deploy-cartservice:
  extends: .deploy_template
  variables:
    COMPONENT: "cartService"
    COMPONENT_IMAGE: "cartservice"
    COMPONENT_PATH: "cartservice/src"
  dependencies:
    - build-cartservice

# Checkout Service
parse-version-checkoutservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "checkoutService"
    COMPONENT_IMAGE: "checkoutservice"
    COMPONENT_PATH: "checkoutservice"

build-checkoutservice:
  extends: .build_template
  variables:
    COMPONENT: "checkoutService"
    COMPONENT_IMAGE: "checkoutservice"
    COMPONENT_PATH: "checkoutservice"
  dependencies:
    - parse-version-checkoutservice

deploy-checkoutservice:
  extends: .deploy_template
  variables:
    COMPONENT: "checkoutService"
    COMPONENT_IMAGE: "checkoutservice"
    COMPONENT_PATH: "checkoutservice"
  dependencies:
    - build-checkoutservice

# Currency Service
parse-version-currencyservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "currencyService"
    COMPONENT_IMAGE: "currencyservice"
    COMPONENT_PATH: "currencyservice"

build-currencyservice:
  extends: .build_template
  variables:
    COMPONENT: "currencyService"
    COMPONENT_IMAGE: "currencyservice"
    COMPONENT_PATH: "currencyservice"
  dependencies:
    - parse-version-currencyservice

deploy-currencyservice:
  extends: .deploy_template
  variables:
    COMPONENT: "currencyService"
    COMPONENT_IMAGE: "currencyservice"
    COMPONENT_PATH: "currencyservice"
  dependencies:
    - build-currencyservice

# Email Service
parse-version-emailservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "emailService"
    COMPONENT_IMAGE: "emailservice"
    COMPONENT_PATH: "emailservice"

build-emailservice:
  extends: .build_template
  variables:
    COMPONENT: "emailService"
    COMPONENT_IMAGE: "emailservice"
    COMPONENT_PATH: "emailservice"
  dependencies:
    - parse-version-emailservice

deploy-emailservice:
  extends: .deploy_template
  variables:
    COMPONENT: "emailService"
    COMPONENT_IMAGE: "emailservice"
    COMPONENT_PATH: "emailservice"
  dependencies:
    - build-emailservice

# Frontend
parse-version-frontend:
  extends: .parse_version_template
  variables:
    COMPONENT: "frontend"
    COMPONENT_IMAGE: "frontend"
    COMPONENT_PATH: "frontend"

build-frontend:
  extends: .build_template
  variables:
    COMPONENT: "frontend"
    COMPONENT_IMAGE: "frontend"
    COMPONENT_PATH: "frontend"
  dependencies:
    - parse-version-frontend

deploy-frontend:
  extends: .deploy_template
  variables:
    COMPONENT: "frontend"
    COMPONENT_IMAGE: "frontend"
    COMPONENT_PATH: "frontend"
  dependencies:
    - build-frontend

# Payment Service
parse-version-paymentservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "paymentService"
    COMPONENT_IMAGE: "paymentservice"
    COMPONENT_PATH: "paymentservice"

build-paymentservice:
  extends: .build_template
  variables:
    COMPONENT: "paymentService"
    COMPONENT_IMAGE: "paymentservice"
    COMPONENT_PATH: "paymentservice"
  dependencies:
    - parse-version-paymentservice

deploy-paymentservice:
  extends: .deploy_template
  variables:
    COMPONENT: "paymentService"
    COMPONENT_IMAGE: "paymentservice"
    COMPONENT_PATH: "paymentservice"
  dependencies:
    - build-paymentservice

# Product Catalog Service
parse-version-productcatalogservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "productCatalogService"
    COMPONENT_IMAGE: "productcatalogservice"
    COMPONENT_PATH: "productcatalogservice"

build-productcatalogservice:
  extends: .build_template
  variables:
    COMPONENT: "productCatalogService"
    COMPONENT_IMAGE: "productcatalogservice"
    COMPONENT_PATH: "productcatalogservice"
  dependencies:
    - parse-version-productcatalogservice

deploy-productcatalogservice:
  extends: .deploy_template
  variables:
    COMPONENT: "productCatalogService"
    COMPONENT_IMAGE: "productcatalogservice"
    COMPONENT_PATH: "productcatalogservice"
  dependencies:
    - build-productcatalogservice

# Recommendation Service
parse-version-recommendationservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "recommendationService"
    COMPONENT_IMAGE: "recommendationservice"
    COMPONENT_PATH: "recommendationservice"

build-recommendationservice:
  extends: .build_template
  variables:
    COMPONENT: "recommendationService"
    COMPONENT_IMAGE: "recommendationservice"
    COMPONENT_PATH: "recommendationservice"
  dependencies:
    - parse-version-recommendationservice

deploy-recommendationservice:
  extends: .deploy_template
  variables:
    COMPONENT: "recommendationService"
    COMPONENT_IMAGE: "recommendationservice"
    COMPONENT_PATH: "recommendationservice"
  dependencies:
    - build-recommendationservice

# Shipping Service
parse-version-shippingservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "shippingService"
    COMPONENT_IMAGE: "shippingservice"
    COMPONENT_PATH: "shippingservice"

build-shippingservice:
  extends: .build_template
  variables:
    COMPONENT: "shippingService"
    COMPONENT_IMAGE: "shippingservice"
    COMPONENT_PATH: "shippingservice"
  dependencies:
    - parse-version-shippingservice

deploy-shippingservice:
  extends: .deploy_template
  variables:
    COMPONENT: "shippingService"
    COMPONENT_IMAGE: "shippingservice"
    COMPONENT_PATH: "shippingservice"
  dependencies:
    - build-shippingservice

# Shopping Assistant Service
parse-version-shoppingassistantservice:
  extends: .parse_version_template
  variables:
    COMPONENT: "shoppingAssistantService"
    COMPONENT_IMAGE: "shoppingassistantservice"
    COMPONENT_PATH: "shoppingassistantservice"

build-shoppingassistantservice:
  extends: .build_template
  variables:
    COMPONENT: "shoppingAssistantService"
    COMPONENT_IMAGE: "shoppingassistantservice"
    COMPONENT_PATH: "shoppingassistantservice"
  dependencies:
    - parse-version-shoppingassistantservice

deploy-shoppingassistantservice:
  extends: .deploy_template
  variables:
    COMPONENT: "shoppingAssistantService"
    COMPONENT_IMAGE: "shoppingassistantservice"
    COMPONENT_PATH: "shoppingassistantservice"
  dependencies:
    - build-shoppingassistantservice